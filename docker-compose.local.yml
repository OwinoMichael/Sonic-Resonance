services:
  db:
    image: postgres:16
    container_name: pg-db-local
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - pgdata_local:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-sonicres}"]
      interval: 5s
      timeout: 5s
      retries: 10

  spring:
    image: maven:3.9.9-eclipse-temurin-21
    container_name: springboot-app-local
    restart: unless-stopped
    working_dir: /app
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/${DB_NAME}
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASS}
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend-spring:/app
      - ~/.m2:/root/.m2
    ports:
      - "8080:8080"
    networks:
      - app-network
    # Install FFmpeg then run Spring Boot
    command: >
      bash -c "
        apt-get update && 
        apt-get install -y ffmpeg && 
        mvn spring-boot:run
      "

  react:
    image: node:20-alpine
    container_name: react-app-local
    restart: unless-stopped
    working_dir: /app
    environment:
      - VITE_WS_URL=ws://localhost:8080/ws/audio
      - VITE_API_URL=http://localhost:8080/api
    depends_on:
      - spring
    volumes:
      - ./frontend-react:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    networks:
      - app-network
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"

volumes:
  pgdata_local:
  audio_temp:  # Shared volume for audio processing

networks:
  app-network:
    driver: bridge